version: "3.8"

services:
  mysqldb:
    image: mysql:8.0
    restart: unless-stopped
    container_name: ticketing-db
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  front:
    build:
      context: "./front"
      dockerfile: Dockerfile
    container_name: front
    env_file: ./.env
    ports:
      - $FRONT_DOCKER_PORT:$FRONT_LOCAL_PORT
  back:
    container_name: back
    depends_on:
      - mysqldb
    build:
      context: "./backend"
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $BACK_LOCAL_PORT:$BACK_DOCKER_PORT
    volumes:
      - ./backend/.env:/dist/.env
    environment:
      - DB_HOST=mysqldb
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
    stdin_open: true
    tty: true
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  redis:
    image: "redis:latest"
    container_name: redis
    restart: always
    ports:
      - $REDIS_LOCAL_PORT:$REDIS_DOCKER_PORT
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./.env
    labels:
      - "name-=redis"
      - "mode=standalone"
    command: redis-server /usr/local/etc/redis/redis.conf
    logging:
      options:
        max-size: "10m"
        max-file: "3"
volumes:
  db:
